{
  "name": "code-to-txt-exporter-mg",
  "displayName": "Code Dump to TXT/MD",
  "description": "Export all code in a folder to a single .txt or .md file. Useful for archiving or AI-based code analysis.",
  "publisher": "mghiani",
  "license": "MIT",
  "version": "1.3.0",
  "icon": "logo.png",
  "engines": {
    "vscode": "^1.102.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/m-ghiani/code-exporter.git"
  },
  "activationEvents": [
    "onCommand:extension.exportCodeToText"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "extension.exportCodeToText",
        "title": "Export Code to TXT/MD",
        "icon": "$(export)"
      },
      {
        "command": "extension.exportCodeCLI",
        "title": "Code Dump: Export Current Workspace"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "extension.exportCodeToText",
          "when": "explorerResourceIsFolder",
          "group": "2_workspace"
        }
      ],
      "commandPalette": [
        {
          "command": "extension.exportCodeCLI",
          "when": "workspaceFolderCount > 0"
        }
      ]
    },
    "configuration": {
      "title": "Code Dump",
      "properties": {
        "codeDump.defaultExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".ts",
            ".js",
            ".py"
          ],
          "description": "Default list of file extensions to include when exporting code."
        },
        "codeDump.outputFormat": {
          "type": "string",
          "enum": [
            ".txt",
            ".md"
          ],
          "default": ".md",
          "description": "Default output format for the exported file."
        },
        "codeDump.openAfterExport": {
          "type": "boolean",
          "default": true,
          "description": "Open exported file automatically after creation."
        },
        "codeDump.copyToClipboard": {
          "type": "boolean",
          "default": false,
          "description": "Copy exported content to clipboard."
        },
        "codeDump.compactMode": {
          "type": "boolean",
          "default": false,
          "description": "Enable compact mode (strip extra whitespace)."
        },
        "codeDump.dryRun": {
          "type": "boolean",
          "default": false,
          "description": "Simulate the export without creating files."
        },
        "codeDump.skipEmptyFiles": {
          "type": "string",
          "enum": [
            "include",
            "exclude",
            "ask"
          ],
          "default": "ask",
          "description": "How to handle empty files during export: 'include', 'exclude', or 'ask'."
        },
        "codeDump.useSmartFilters": {
          "type": "boolean",
          "default": true,
          "description": "Enable smart filtering to automatically exclude common build/cache directories."
        },
        "codeDump.enablePresets": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic project type detection and presets."
        },
        "codeDump.includeMetadata": {
          "type": "boolean",
          "default": false,
          "description": "Include file metadata (size, lines, modification date) in export."
        },
        "codeDump.showTokenEstimate": {
          "type": "boolean",
          "default": true,
          "description": "Show estimated token count for AI model usage."
        },
        "codeDump.smartFilters": {
          "type": "object",
          "default": {
            "autoExclude": [
              "node_modules",
              "dist",
              "build",
              ".git",
              "coverage",
              ".vscode",
              ".idea"
            ],
            "maxFileSize": "1MB",
            "skipBinaryFiles": true,
            "includePatterns": [],
            "excludePatterns": [
              "*.log",
              "*.tmp",
              "*.cache"
            ]
          },
          "description": "Smart filtering configuration for automatic file exclusion.",
          "properties": {
            "autoExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Directory names to automatically exclude."
            },
            "maxFileSize": {
              "type": "string",
              "description": "Maximum file size (e.g., '1MB', '500KB')."
            },
            "skipBinaryFiles": {
              "type": "boolean",
              "description": "Automatically skip binary files."
            },
            "includePatterns": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "File patterns that must be included (if specified, only these files will be included)."
            },
            "excludePatterns": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "File patterns to exclude (supports wildcards)."
            }
          }
        },
        "codeDump.maxChunkSize": {
          "type": "number",
          "default": 500000,
          "description": "Maximum size per output file chunk in bytes (500KB default)."
        }
      }
    }
  },
  "scripts": {
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "keywords": [
    "export",
    "code",
    "txt",
    "md",
    "ai",
    "chatgpt",
    "claude",
    "archiving",
    "markdown",
    "tools",
    "context",
    "workspace",
    "explorer",
    "context menu",
    "vscode-extension",
    "preset",
    "smart-filter",
    "token-estimate"
  ],
  "devDependencies": {
    "@types/node": "^18.19.121",
    "@types/vscode": "^1.102.0",
    "typescript": "^5.9.2",
    "vsce": "^2.15.0"
  },
  "dependencies": {
    "ignore": "^5.3.2"
  }
}
